// Even Fibonacci numbers

// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

function evenFibonacciNumbers(num = 4000000) {
  let x = 1;
  let y = 1;
  let temp;
  let sum = 0;

  while (y <= num) {
    if (y % 2 === 0) {
      sum += y;
    }

    temp = y;
    y += x;
    x = temp;
  }

  return sum;
}

// Revised solution from the overview
function evenFibonacciNumbersRevised(num = 4000000) {
  let x = 1;
  let y = 1;
  let z = x + y; // The change is to take advantage of the fibonacchi sequence pattern where every third number is even.
  let sum = 0;

  while (z <= num) {
    sum += z; // No longer need to test if the number is even or not.

    x = y + z;
    y = x + z;
    z = x + y;
  }

  return sum;
}

console.log(evenFibonacciNumbers());
// console.log(evenFibonacciNumbersRevised());
